{"version":3,"sources":["src/app/app.component.html","src/app/fetch-data/fetch-data.component.html","src/app/home/home.component.html","src/app/nav-menu/nav-menu.component.html","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/fetch-data/fetch-data.component.ts","src/app/home/home.component.ts","src/app/nav-menu/nav-menu.component.css","src/app/nav-menu/nav-menu.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<body>\\n  <app-nav-menu></app-nav-menu>\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</body>\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Fetch-Data</h1>\\n\\n<p *ngIf=\\\"!prediction\\\"><em>Loading...</em></p>\\n\\n<div *ngIf=\\\"prediction\\\">\\n    <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n            [type]=\\\"'line'\\\"\\n            [data]=\\\"lineChartData\\\"\\n            [options]=\\\"lineChartOptions\\\"\\n            [legend]=\\\"lineChartLegend\\\">\\n    </canvas>\\n</div>\\n\"","export default \"<h1>Hello, world!</h1>\\n<p>Welcome to your new single-page application, built with:</p>\\n<ul>\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\n</ul>\\n<p>To help you get started, we've also set up:</p>\\n<ul>\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\n</ul>\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\n\"","export default \"<header>\\n  <nav\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\n  >\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">YouSchedule.Portal</a>\\n      <button\\n        class=\\\"navbar-toggler\\\"\\n        type=\\\"button\\\"\\n        data-toggle=\\\"collapse\\\"\\n        data-target=\\\".navbar-collapse\\\"\\n        aria-label=\\\"Toggle navigation\\\"\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\n        (click)=\\\"toggle()\\\"\\n      >\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\n      >\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\n          <li\\n            class=\\\"nav-item\\\"\\n            [routerLinkActive]=\\\"['link-active']\\\"\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n          >\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\n              >Fetch data</a\\n            >\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    FetchDataComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, pathMatch: 'full' },\n      { path: 'fetch-data', component: FetchDataComponent },\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ChartConfiguration, ChartOptions, ChartType } from 'chart.js';\n\n@Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n})\nexport class FetchDataComponent {\n  public prediction: CompositePredictedSchedule;\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get<CompositePredictedSchedule>(baseUrl + 'predictor').subscribe(result => {\n        this.prediction = result;\n\n        const canvas = <HTMLCanvasElement>document.getElementById('longFormVideos');\n        //const ctx = canvas.getContext('2d');\n\n        /*var myLineChart = new Chart(canvas, {\n            type: 'line',\n            data: {\n                //labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n                datasets: [{\n                    label: \"High Prediction Long Form\",\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    backgroundColor: [\n                        'rgba(105, 0, 132, .2)',\n                    ],\n                    borderColor: [\n                        'rgba(200, 99, 132, .7)',\n                    ],\n                    borderWidth: 2\n                },\n                {\n                    label: \"Low Prediction Long Form\",\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    backgroundColor: [\n                        'rgba(0, 137, 132, .2)',\n                    ],\n                    borderColor: [\n                        'rgba(0, 10, 130, .7)',\n                    ],\n                    borderWidth: 2\n                }\n                ]\n            },\n            options: {\n                responsive: true\n            }\n        });*/\n    }, error => console.error(error));\n  }\n\n    public lineChartData: ChartConfiguration<'line'>['data'] = {\n        labels: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July'\n        ],\n        datasets: [\n            {\n                data: [65, 59, 80, 81, 56, 55, 40],\n                label: 'Series A',\n                fill: true,\n                tension: 0.5,\n                borderColor: 'black',\n                backgroundColor: 'rgba(255,0,0,0.3)'\n            }\n        ]\n    };\n    public lineChartOptions: ChartOptions<'line'> = {\n        responsive: false\n    };\n    public lineChartLegend = true;\n}\n\ninterface CompositePredictedSchedule {\n    highPredictionLongform: PredictedSchedule;\n    lowPredictionLongform: PredictedSchedule;\n    highPredictionShortform: PredictedSchedule;\n    lowPredictionShortform: PredictedSchedule;\n}\n\ninterface PredictedSchedule {\n    videos: PredictedVideo[];\n}\n\ninterface PredictedVideo {\n    likelihood: number;\n\n    minimumDurationSeconds: number;\n    maximumDurationSeconds: number;\n    averageDurationSeconds: number;\n\n    minimumPostTime: RelativeDateTime;\n    maximumPostTime: RelativeDateTime;\n    averagePostTime: RelativeDateTime;\n}\n\ninterface RelativeDateTime {\n    dayOfWeekAsString: string;\n    dayOfWeek: number;\n    hour: number;\n    minute: number;\n    second: number;\n    secondsSinceSunday: number;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { ChartsModule } from 'ng2-charts';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\n/*\nimport '../scss/styles.scss';\nimport * as mdb from 'mdb-ui-kit';\n//window.mdb = mdb;\n\nimport 'mdb-ui-kit/mdb-ui-kit/src/scss/mdb.free.scss';\n*/\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}